# Region Name: US East(N.Virginia)
# Region: us-east-1
# This CloudFormation Template will help in creating a VPC with:
#  a) 3 Public Subnets
#  b) 1 Private Subnets
#  c) An Internet Gateway 
#  d) A NAT Gateway for outbound access

Resources:
      TestVPC:
        Type: 'AWS::EC2::VPC'
        Properties:
          CidrBlock: 10.0.0.0/16

      PubSubnet1:
         Type: 'AWS::EC2::Subnet'
         Properties:
            VpcId: !Ref TestVPC
            AvailabilityZone: us-east-1a
            CidrBlock: 10.0.1.0/24
            MapPublicIpOnLaunch: true

      PubSubnet2:
         Type: 'AWS::EC2::Subnet'
         Properties:
            VpcId: !Ref TestVPC
            AvailabilityZone: us-east-1b
            CidrBlock: 10.0.2.0/24
            MapPublicIpOnLaunch: true

      PubSubnet3:
         Type: 'AWS::EC2::Subnet'
         Properties:
            VpcId: !Ref TestVPC
            AvailabilityZone: us-east-1c
            CidrBlock: 10.0.3.0/24
            MapPublicIpOnLaunch: true

      PrivateSubnet1:
        Type: 'AWS::EC2::Subnet'
        Properties:
          VpcId: !Ref TestVPC
          AvailabilityZone: us-east-1a
          CidrBlock: 10.0.4.0/24
          MapPublicIpOnLaunch: false

      InternetGateway:
        Type: 'AWS::EC2::InternetGateway'
        Properties:
          Tags:
            - Key: Name
              Value: !Join [_, [!Ref 'AWS::StackName']]
            - Key: Network
              Value: Public

      GatewayToInternet:
        Type: 'AWS::EC2::VPCGatewayAttachment'
        Properties:
          VpcId: !Ref TestVPC
          InternetGatewayId: !Ref InternetGateway

      PublicRouteTable:
        Type: 'AWS::EC2::RouteTable'
        Properties:
          VpcId: !Ref TestVPC
          Tags:
            - Key: Network
              Value: Public

      PublicRoute:
        Type: 'AWS::EC2::Route'
        DependsOn: GatewayToInternet
        Properties:
           RouteTableId: !Ref PublicRouteTable
           DestinationCidrBlock: 0.0.0.0/0
           GatewayId: !Ref InternetGateway

      PubSubnet1RouteTableAssociation:
         Type: 'AWS::EC2::SubnetRouteTableAssociation'
         Properties:
           SubnetId: !Ref PubSubnet1
           RouteTableId: !Ref PublicRouteTable

      PubSubnet2RouteTableAssociation:
         Type: 'AWS::EC2::SubnetRouteTableAssociation'
         Properties:
            SubnetId: !Ref PubSubnet2
            RouteTableId: !Ref PublicRouteTable

      PubSubnet3RouteTableAssociation:
         Type: 'AWS::EC2::SubnetRouteTableAssociation'
         Properties:
            SubnetId: !Ref PubSubnet3
            RouteTableId: !Ref PublicRouteTable

      NatGateway:
         Type: "AWS::EC2::NatGateway"
         DependsOn: NatPublicIP
         Properties: 
           AllocationId: !GetAtt NatPublicIP.AllocationId
           SubnetId: !Ref PubSubnet1

      NatPublicIP:
        Type: "AWS::EC2::EIP"
        DependsOn: TestVPC
        Properties:
           Domain: vpc

      PrivateRouteTable:
        Type: 'AWS::EC2::RouteTable'
        Properties:
          VpcId: !Ref TestVPC
          Tags:
            - Key: Network
              Value: Private

      PrivateRoute:
        Type: 'AWS::EC2::Route'
        Properties:
          RouteTableId: !Ref PrivateRouteTable
          DestinationCidrBlock: 0.0.0.0/0
          NatGatewayId: !Ref NatGateway

      PrivateSubnet1RouteTableAssociation:
        Type: 'AWS::EC2::SubnetRouteTableAssociation'
        Properties:
           SubnetId: !Ref PrivateSubnet1
           RouteTableId: !Ref PrivateRouteTable
